
UnitPrefix = require("./UnitPrefix.js");
Length = require("./Length.js");
SI = require("./SI.js");

const listFull = [ Length ];
const listFullFlatten = {};
for(let i=0; i<listFull.length; i++) {
    let units = listFull[i].listSymbols;
    let unitsName = Object.keys( units );
    for(let j=0; j<unitsName.length; j++) {
        listFullFlatten[ unitsName[j] ] = units[ unitsName[j] ];
    }
};
const listNames = Object.keys( listFullFlatten );
listNames.sort( (a,b) => b.length - a.length );

let encodePostfix = function( postfix ) {
    let res;
    let unit, type, data;
    res = UnitPrefix.startWith( postfix );   
    unit = res[0]; type = res[1];

    res = SI.startWith( type );
    if( !res[1] && res[0] != undefined ) {
        console.log( `unit: ${ unit }; type: ${ res[0] }` );
        return;
    }

    res = SI.startWith( postfix );
    unit = 'u';
    type = res[0];
    if( !res[1] && res[0] != undefined ) {
        console.log( `unit: ${ unit }; type: ${ res[0] }` );
        return;
    }

    res = startWith( postfix );
    type = res[0];
    data = res[1];
    if( res[0] != undefined ) {
        console.log( `type: ${ res[0] }; data: ${ data }` );
        return;
    }

    console.log( `undefine type: "${postfix}"` );
}

let startWith = function( postfix ) {
    for(let i=0; i<listNames.length; i++) {
        if( postfix.startsWith( listNames[i] )) {
            const l = listNames[i].length;
            return [ postfix.slice(0, l), postfix.slice(l) ];
        }
    }
    return [ undefined, postfix ];
};

encodePostfix( 'km' );
encodePostfix( 'm' );
encodePostfix( 'mk' );
encodePostfix( 'kg' );
encodePostfix( 'mda' );
encodePostfix( 'JS' );
encodePostfix( 'kmes' );
