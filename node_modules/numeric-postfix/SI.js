let SI = function ( value, unitPrefix ) {
    this.value = value;
};

SI.units = [ ];
SI.listNames = { };
SI.listSymbols = { };

SI.units.push({
    name: 'second',
    symbol: 's',
    unitPrefix: true,
    SI: true,
});
SI.listNames.second = SI.units.at(-1);
SI.listSymbols.s = SI.units.at(-1);

SI.units.push({
    name: 'gram',
    symbol: 'g',
    unitPrefix: true,
    SI: true,
});
SI.listNames.gram = SI.units.at(-1);
SI.listSymbols.g = SI.units.at(-1);

SI.units.push({
    name: 'meter',
    symbol: 'm',
    unitPrefix: true,
    SI: true,
});
SI.listNames.meter = SI.units.at(-1);
SI.listSymbols.m = SI.units.at(-1);

SI.units.push({
    name: 'ampere',
    symbol: 'A',
    unitPrefix: true,
    SI: true,
});
SI.listNames.ampere = SI.units.at(-1);
SI.listSymbols.A = SI.units.at(-1);

SI.units.push({
    name: 'kelvin',
    symbol: 'K',
    unitPrefix: true,
    SI: true,
});
SI.listNames.kelvin = SI.units.at(-1);
SI.listSymbols.K = SI.units.at(-1);

SI.units.push({
    name: 'mole',
    symbol: 'mol',
    unitPrefix: true,
    SI: true,
});
SI.listNames.mole = SI.units.at(-1);
SI.listSymbols.mol = SI.units.at(-1);

SI.units.push({
    name: 'candela',
    symbol: 'cd',
    unitPrefix: true,
    SI: true,
});
SI.listNames.candela = SI.units.at(-1);
SI.listSymbols.cd = SI.units.at(-1);


const listNames = Object.keys(SI.listSymbols);
listNames.sort( (a,b) => b.length - a.length );
SI.startWith = function( postfix ) {
    for(let i=0; i<listNames.length; i++) {
        if( postfix.startsWith( listNames[i] )) {
            const l = listNames[i].length;
            return [ postfix.slice(0, l), postfix.slice(l) ];
        }
    }
    return [ undefined, postfix ];
};

module.exports = SI;
