
let SimpleTest = function( initText ) {
    this.text = '\n' + initText + '\n';
    this.listSize = 75;

    this.it = function( text, func1, func2 ) {
        this.addListElement( text, this.test( func1, func2 ) );
    }

    this.test = function( func1, func2 ) { 
        let value1;
        try { value1 = func1(); }
        catch( err ) { value1 = err; }

        let value2;
        try { value2 = func2(); }
        catch( err ) { value2 = err; }

        if( value1 instanceof Error && !(value2 instanceof Error) ) {
            return 'Param is ERROR: ❌\n' + value1;
        }
        if( !(value1 instanceof Error) && value2 instanceof Error ) {
            return 'Param is NOT ERROR: ❌';
        }
        if( value1 instanceof Error && value2 instanceof Error ) {  return '✅\nError1: ' + value1 + '\nError2: ' + value2; }
        if( value1 == value2 )  { return '✅'; }
        if( value1 === value2 ) { return '✅'; }
        if( value1 instanceof Array && value2 instanceof Array ) {
            if( value1.length != value2.length ) { return 'Array have different size: ❌' };
            for( let i=0; i<value1.length; i++ ) {
                if( this.test( () => value1[i], () => value2[i] )[0] != '✅' ) {
                    return 'Array is not equal: ❌';
                }
            }
            return '✅';
        }
        if( value1 instanceof Map && value2 instanceof Map ) {
            for(let key of value1.keys() ) {
                if( this.test( () => value1.get(key), () => value2.get(key) )[0] != '✅' ) {
                    return 'Map is not equal: ❌';
                }
            }
            return '✅';
        }
        if( typeof value1 === 'object' && typeof value2 === 'object' ) {
            for(let key of Object.keys( value1 ) ) {
                if( this.test( () => value1[key], () => value2[key] )[0] != '✅' ) {
                    return 'Object is not equal: ❌';
                }
            }
            return '✅';
        }
        return '❌';
    }

    this.addListElement = function( text, res ) {
        const arrOfWord = text.split(' ');
        for(let i=0, rowLength=0; i<arrOfWord.length; i++) {
            const wordLength = arrOfWord[i].length;
            if( wordLength >= this.listSize ) {
                if( i!=0 ) {
                    arrOfWord.splice( i, 0, '\n  ' );
                }
                i++;
                rowLength=arrOfWord[i].length;
                continue;
            }
            rowLength += wordLength;
            if( rowLength >= this.listSize) {
                arrOfWord.splice( i, 0, '\n  ' );
                rowLength=wordLength;
                i++;
            }
        }
        this.text += ' - ' + arrOfWord.join(' ') + ':  ' + res + '\n';
    }

    this.print = function() {
        console.log( this.text );
    }
}

module.exports = SimpleTest;
