const ComplexUnit = require('./ComplexUnit.js');

let UnitValue = function( value, types ) {
    this.value = value;
    ComplexUnit.call( this, types );
};
UnitValue.prototype = UnitValue;
UnitValue.__proto__ = ComplexUnit;

UnitValue.addType = function( type, power ) { return ComplexUnit.addType.call(this, type, power ) };
UnitValue.typeConversion = function( type ) { return ComplexUnit.typeConversion.call(this, type ) };
UnitValue.typeConversionKoef = function( type ) { return ComplexUnit.typeConversionKoef.call(this, type ) };
UnitValue.toString = function() { return this.value + ComplexUnit.toString.call(this) };

// +
UnitValue.__add__ = function( value ) {
    const convertType = this.typeConversion( value.type );
    const koef1 = this.typeConversionKoef( convertType );
    const koef2 = value.typeConversionKoef( convertType );

    return new UnitValue( this.value*koef1 + value.value*koef2, convertType.type );
};

// *
UnitValue.__mul__ = function ( value ) { 
    return new UnitValue( this.value * value.value, [...this.type.entries(), ...value.type.entries()]);
};

module.exports = UnitValue;

